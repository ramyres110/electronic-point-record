{"version":3,"sources":["components/Header-component.jsx","components/Footer-component.jsx","components/Content-component.jsx","services/api-service.js","controllers/checkpoint-controller.js","pages/Home.jsx","pages/Checkpoint.jsx","routes.js","serviceWorker.js","index.js"],"names":["Header","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Footer","Content","children","instance","axios","create","baseURL","window","location","origin","timeout","headers","get","path","post","body","JSON","stringify","del","delete","put","format","data","map","item","typeName","trim","createdAt","Date","toLocaleString","save","name","api","getAll","then","getByName","change","Home","useState","setName","onSubmit","evt","preventDefault","swal","CheckpointController","ret","catch","err","console","log","value","onChange","e","target","autoFocus","placeholder","Checkpoint","list","setList","query","setQuery","useEffect","scope","length","key","colSpan","Routes","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"yLA8BeA,MA1Bf,WACE,OACE,yBAAKC,UAAU,2DACb,4BAAQA,UAAU,iBAAiBC,KAAK,SAASC,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBAC9K,0BAAMN,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BO,GAAG,uBAE3C,kBAAC,IAAD,CAAMP,UAAU,eAAeQ,GAAG,KAAlC,cAEA,wBAAIR,UAAU,mCACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWQ,GAAG,KAA9B,cAEF,wBAAIR,UAAU,YACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWQ,GAAG,eAA9B,kBCRGC,MARf,WACI,OACI,yBAAKT,UAAU,uBAAf,4B,OCEOU,MAJf,YAAgC,IAAbC,EAAY,EAAZA,SACf,OAAO,yBAAKX,UAAU,aAAaW,I,gCCHjCC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAQ,GAAD,OAAKC,OAAOC,SAASC,OAArB,WACPC,QAAS,IACTC,QAAS,CAAE,eAAgB,sBAoBhB,OACXC,IAlBJ,SAAaC,GACT,OAAOV,EAASS,IAAIC,IAkBpBC,KAfJ,SAAcD,EAAME,GAChB,OAAOZ,EAASW,KAAKD,EAAMG,KAAKC,UAAUF,KAe1CG,IARJ,SAAaL,GACT,OAAOV,EAASgB,OAAON,IAQvBO,IAbJ,SAAaP,EAAME,GACf,OAAOZ,EAASiB,IAAIP,EAAMG,KAAKC,UAAUF,MCf7C,SAASM,EAAOC,GACZ,OAAOA,EAAKC,KAAI,SAAAC,GACZ,OAAO,eACAA,EADP,CAEIC,SAAgC,MAArBD,EAAKhC,KAAKkC,OAAkB,UAAY,WACnDC,UAAW,IAAIC,KAAKJ,EAAKG,WAAWE,sBAkCjC,OACXC,KA9BJ,SAAcC,GACV,OAAOC,EAAIlB,KAAK,cAAe,CAAEiB,UA8BjCE,OA3BJ,WACI,OAAOD,EAAIpB,IAAI,eACVsB,MAAK,SAAAZ,GACF,OAAKA,EAAKA,KACHD,EAAOC,EAAKA,MADI,OAyB/Ba,UApBJ,SAAmBJ,GACf,OAAOC,EAAIpB,IAAJ,sBAAuBmB,IACzBG,MAAK,SAAAZ,GACF,OAAKA,EAAKA,KACHD,EAAOC,EAAKA,MADI,OAkB/BJ,IAZJ,SAAapB,GACT,OAAOkC,EAAId,IAAJ,sBAAuBpB,KAY9BsC,OATJ,SAAgBtC,EAAIwB,GAChB,OAAOU,EAAIZ,IAAJ,sBAAuBtB,GAAMwB,KCkBzBe,MAjDf,WAAiB,IAAD,EACUC,mBAAS,IADnB,mBACPP,EADO,KACDQ,EADC,KAsBd,OACE,kBAAC,EAAD,KACE,yBAAKhD,UAAU,gEAEb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,OAEb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAd,aAEA,0BAAMiD,SA9BpB,SAAkBC,GAGhB,GAFAA,EAAIC,kBAECX,EAAKL,OACR,OAAOiB,IAAK,gBAAW,2CAA4C,WAGrEC,EAAqBd,KAAKC,GACvBG,MAAK,SAAAW,GACJF,IAAK,UAAW,oBAAqB,WACrCJ,EAAQ,OAETO,OAAM,SAAAC,GACLJ,IAAK,OAAQ,sDAAuD,SACpEK,QAAQC,IAAIF,GACZR,EAAQ,SAgBE,2BAAOW,MAAOnB,EAAMoB,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEC,OAAOH,QAAQ1D,KAAK,OAAOD,UAAU,oBAAoBM,aAAW,GAAGyD,WAAS,EAACC,YAAY,qBAC5I,4BAAQ/D,KAAK,SAASD,UAAU,8CAAhC,qBCiCHiE,MAtEf,WAAuB,IAAD,EACIlB,mBAAS,IADb,mBACbmB,EADa,KACPC,EADO,OAEMpB,mBAAS,IAFf,mBAEbqB,EAFa,KAENC,EAFM,KAIpB,SAAS3B,IACPW,EAAqBX,SAASC,MAAK,SAAAZ,GAAI,OAAIoC,EAAQpC,MAiBrD,OANAuC,qBAAU,WACR5B,MACC,IAEH4B,qBAAU,cAAW,CAACJ,IAGpB,kBAAC,EAAD,KACE,yBAAKlE,UAAU,OACb,yBAAKA,UAAU,OAEb,0BAAMA,UAAU,mBAAmBiD,SAnB3C,SAAgBC,GAEd,GADAA,EAAIC,kBACCiB,EACH,OAAO1B,IAETW,EAAqBT,UAAUwB,GAAOzB,MAAK,SAAAZ,GAAI,OAAIoC,EAAQpC,QAenD,2BAAO4B,MAAOS,EAAOR,SAAU,SAACC,GAAD,OAAOQ,EAASR,EAAEC,OAAOH,QAAQ3D,UAAU,oBAAoBC,KAAK,SAAS+D,YAAY,SAAS1D,aAAW,WAC5I,4BAAQN,UAAU,0BAA0BC,KAAK,UAAjD,aAMN,yBAAKD,UAAU,oBACb,2BAAOA,UAAU,sCACf,2BAAOA,UAAU,cACf,4BACE,wBAAIuE,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,mBAGJ,+BAEML,EAAKM,OAKHN,EAAKlC,KAAI,SAACC,GACR,OAAQ,wBAAIwC,IAAKxC,EAAK1B,IACpB,wBAAIgE,MAAM,OAAOtC,EAAK1B,IACtB,wBAAIgE,MAAM,OAAOtC,EAAKO,MACtB,wBAAI+B,MAAM,MAAMvE,UAAiC,MAArBiC,EAAKhC,KAAKkC,OAAkB,eAAiB,eAAgBF,EAAKC,UAC9F,wBAAIqC,MAAM,OAAOtC,EAAKG,eAT5B,4BACE,wBAAIsC,QAAQ,IAAI1E,UAAU,0BAA1B,oCCxCH,SAAS2E,IACpB,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACtD,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,eACR,kBAAC,EAAD,QAGR,kBAAC,EAAD,OCdQuD,QACW,cAA7B7D,OAAOC,SAAS6D,UAEe,UAA7B9D,OAAOC,SAAS6D,UAEhB9D,OAAOC,SAAS6D,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACP,EAAD,OAEFQ,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5C,MAAK,SAAA6C,GACJA,EAAaC,gBAEdlC,OAAM,SAAAmC,GACLjC,QAAQiC,MAAMA,EAAMC,c","file":"static/js/main.20563fff.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark shadow mb-5\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n\r\n        <Link className=\"navbar-brand\" to=\"/\">Checkpoint</Link>\r\n\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">Início</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/checkpoint\">Registros</Link>\r\n          </li>\r\n        </ul>\r\n\r\n      </div>\r\n\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <nav className=\"mt-5 p-5 border-top\">\r\n            @ramyres110 - &copy; 2020\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction Content({ children }) {\r\n    return <div className=\"container\">{children}</div>;\r\n}\r\n\r\nexport default Content;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: `${window.location.origin}/api/v1`,\r\n    timeout: 10000,\r\n    headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\nfunction get(path) {\r\n    return instance.get(path);\r\n}\r\n\r\nfunction post(path, body) {\r\n    return instance.post(path, JSON.stringify(body));\r\n}\r\n\r\nfunction put(path, body) {\r\n    return instance.put(path, JSON.stringify(body));\r\n}\r\n\r\nfunction del(path) {\r\n    return instance.delete(path);\r\n}\r\n\r\n\r\nexport default {\r\n    get,\r\n    post,\r\n    del,\r\n    put\r\n};","import api from '../services/api-service';\r\n\r\nfunction format(data) {\r\n    return data.map(item => {\r\n        return {\r\n            ...item,\r\n            typeName: (item.type.trim() === 'I') ? 'Entrada' : 'Saída',\r\n            createdAt: new Date(item.createdAt).toLocaleString()\r\n        }\r\n    })\r\n}\r\n\r\nfunction save(name) {\r\n    return api.post('/checkpoint', { name });\r\n}\r\n\r\nfunction getAll() {\r\n    return api.get('/checkpoint')\r\n        .then(data => {\r\n            if (!data.data) return [];\r\n            return format(data.data);\r\n        });\r\n}\r\n\r\nfunction getByName(name) {\r\n    return api.get(`/checkpoint/${name}`)\r\n        .then(data => {\r\n            if (!data.data) return [];\r\n            return format(data.data);\r\n        });\r\n}\r\n\r\n\r\nfunction del(id) {\r\n    return api.del(`/checkpoint/${id}`);\r\n}\r\n\r\nfunction change(id, data) {\r\n    return api.put(`/checkpoint/${id}`, data);\r\n}\r\n\r\nexport default {\r\n    save,\r\n    getAll,\r\n    getByName,\r\n    del,\r\n    change,\r\n}","import React, { useState } from 'react';\r\nimport Content from '../components/Content-component';\r\n\r\nimport swal from 'sweetalert';\r\n\r\nimport CheckpointController from '../controllers/checkpoint-controller';\r\n\r\nfunction Home() {\r\n  const [name, setName] = useState('');\r\n\r\n  function register(evt) {\r\n    evt.preventDefault();\r\n\r\n    if (!name.trim()) {\r\n      return swal(\"Atenção\", \"Informe seu nome para registro do ponto!\", \"warning\");\r\n    }\r\n\r\n    CheckpointController.save(name)\r\n      .then(ret => {\r\n        swal(\"Sucesso\", \"Ponto Registrado!\", \"success\");\r\n        setName('');\r\n      })\r\n      .catch(err => {\r\n        swal(\"Ops!\", \"Algo de errado ocorreu impossibilitando o registro!\", \"error\");\r\n        console.log(err);\r\n        setName('');\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n      <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n\r\n            <div className=\"card w-100 shadow p-4\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Registrar</h5>\r\n\r\n                <form onSubmit={register}>\r\n                  <input value={name} onChange={(e) => setName(e.target.value)} type=\"text\" className=\"form-control mb-3\" aria-label=\"\" autoFocus placeholder=\"Informe seu nome\" />\r\n                  <button type=\"submit\" className=\"btn btn-outline-primary float-right btn-lg\">Registrar</button>\r\n                </form>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </Content>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport Content from '../components/Content-component';\r\n\r\nimport CheckpointController from '../controllers/checkpoint-controller';\r\n\r\nfunction Checkpoint() {\r\n  const [list, setList] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n\r\n  function getAll() {\r\n    CheckpointController.getAll().then(data => setList(data));\r\n  }\r\n\r\n  function search(evt) {\r\n    evt.preventDefault();\r\n    if (!query) {\r\n      return getAll();\r\n    }\r\n    CheckpointController.getByName(query).then(data => setList(data));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAll();\r\n  }, []);\r\n\r\n  useEffect(() => { }, [list]);\r\n\r\n  return (\r\n    <Content>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n\r\n          <form className=\"form-inline mb-3\" onSubmit={search}>\r\n            <input value={query} onChange={(e) => setQuery(e.target.value)} className=\"form-control mr-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-striped table-bordered\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Nome</th>\r\n              <th scope=\"col\">Tipo</th>\r\n              <th scope=\"col\">Registrado Em</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              (!list.length) ? (\r\n                <tr>\r\n                  <td colSpan=\"4\" className=\"text-muted text-center\">Nenhum Registro Encontrado</td>\r\n                </tr>\r\n              ) : (\r\n                  list.map((item) => {\r\n                    return (<tr key={item.id}>\r\n                      <td scope=\"col\">{item.id}</td>\r\n                      <td scope=\"col\">{item.name}</td>\r\n                      <td scope=\"col\" className={(item.type.trim() === 'I') ? 'text-success' : 'text-danger'}>{item.typeName}</td>\r\n                      <td scope=\"col\">{item.createdAt}</td>\r\n                    </tr>)\r\n                  })\r\n                )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Content>\r\n  );\r\n\r\n}\r\n\r\nexport default Checkpoint;","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport Header from \"./components/Header-component\";\r\nimport Footer from \"./components/Footer-component\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Checkpoint from \"./pages/Checkpoint\";\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Router>\r\n            <Header />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route path=\"/checkpoint\">\r\n                    <Checkpoint />\r\n                </Route>\r\n            </Switch>\r\n            <Footer />\r\n        </Router>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}